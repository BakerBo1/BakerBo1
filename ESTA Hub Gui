-- Load the Orion Library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

-- Create a window
local Window = OrionLib:MakeWindow({
    Name = "Esta Hub - BakerBoi384",
    SaveConfig = true,
    ConfigFolder = "MyComplexScriptConfig"
})

-- Create tabs
local Tab1 = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Tab2 = Window:MakeTab({
    Name = "Player",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Tab3 = Window:MakeTab({
    Name = "Lock/Esp",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Tab4 = Window:MakeTab({
    Name = "Visual",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

local Tab5 = Window:MakeTab({
    Name = "Misc",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Add sections to Tab One
local Section1_Tab1 = Tab1:AddSection({
    Name = ""
})

local Section2_Tab1 = Tab1:AddSection({
    Name = ""
})


-- Define a variable to hold the loaded script
local noClipScript

-- Function to reset player's collision properties
local function ResetCollision()
    local player = game.Players.LocalPlayer
    local character = player.Character
    if character then
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end

-- Add UI elements to Tab One sections
Section1_Tab1:AddToggle({
    Name = "No Clip",
    Default = false,
    Callback = function(Value)
        if Value then
            -- Load and execute the script for No Clip
            noClipScript = loadstring(game:HttpGet("https://raw.githubusercontent.com/BakerBo1/No-clip/main/No%20clip", true))
            if noClipScript then
                noClipScript()
            else
                warn("Failed to load No Clip script")
            end
        else
            -- Disable the loaded No Clip script
            noClipScript = nil
            -- Reset player's collision properties
            ResetCollision()
        end
    end
})


Section2_Tab1:AddToggle({
    Name = "No Recoil",
    Default = false,
    Callback = function(Value)
        print("Toggle 1 value changed to:", Value)
    end
})

-- Add sections to Tab Two
local Section1_Tab2 = Tab2:AddSection({
    Name = "Section 1 - Tab Two"
})

local Section2_Tab2 = Tab2:AddSection({
    Name = "Section 2 - Tab Two"
})

-- Add UI elements to Tab Two sections
Section1_Tab2:AddSlider({
    Name = "Slider 1 - Section 1",
    Min = 0,
    Max = 100,
    Default = 50,
    Callback = function(Value)
        print("Slider 1 value changed to:", Value)
    end
})

Section2_Tab2:AddTextbox({
    Name = "Textbox 1 - Section 2",
    Default = "Enter text here",
    Callback = function(Value)
        print("Textbox 1 value changed to:", Value)
    end
})

-- Add sections to Tab Three
local Section1_Tab3 = Tab3:AddSection({
    Name = "Section 1 - Tab Three"
})

local Section2_Tab3 = Tab3:AddSection({
    Name = "Section 2 - Tab Three"
})

-- Add UI elements to Tab Three sections
Section1_Tab3:AddLabel("Label 1 - Section 1")

Section2_Tab3:AddColorpicker({
    Name = "Colorpicker 1 - Section 2",
    Default = Color3.fromRGB(255, 0, 0),
    Callback = function(Value)
        print("Colorpicker 1 value changed to:", Value)
    end
})

-- Function to make the top part of the GUI draggable for phones
local function makeDraggable(window)
    local topFrame = window.Frame

    local isDragging = false
    local startPosition = UDim2.new()
    local startDragPosition = Vector2.new()

    topFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            isDragging = true
            startDragPosition = input.Position
            startPosition = window.Position
        end
    end)

    topFrame.InputChanged:Connect(function(input)
        if isDragging and input.UserInputType == Enum.UserInputType.Touch then
            local delta = input.Position - startDragPosition
            window.Position = startPosition + UDim2.new(0, delta.X, 0, delta.Y)
        end
    end)

    topFrame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.Touch then
            isDragging = false
        end
    end)
end

-- Make the top part of the GUI draggable
makeDraggable(Window)


-- Initialize the Orion Library
OrionLib:Init()
